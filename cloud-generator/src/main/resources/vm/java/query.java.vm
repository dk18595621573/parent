package ${packageName}.model;

#foreach ($import in $importList)
import ${import};
#end
import lombok.Data;
import lombok.experimental.Accessors;
#if($table.crud || $table.sub)
#elseif($table.tree)
#end

/**
 * ${functionName}Query对象.
 * 
 * @author ${author}
 * @date ${datetime}
 */
#if($table.crud || $table.sub)
#set($Entity="BaseEntity")
#elseif($table.tree)
#set($Entity="TreeEntity")
#end
@Data
@Accessors(chain = true)
public class ${ClassName}Query implements Serializable {

    private static final long serialVersionUID = -1L;

#foreach ($column in $columns)
#if(!$table.isSuperColumn($column.javaField))
    /** $column.columnComment. */
#if($column.list)
#set($parentheseIndex=$column.columnComment.indexOf("（"))
#if($parentheseIndex != -1)
#set($comment=$column.columnComment.substring(0, $parentheseIndex))
#else
#set($comment=$column.columnComment)
#end
#end
    private $column.javaType $column.javaField;

#end
#end
#if($table.sub)
    /** $table.subTable.functionName信息 */
    private List<${subClassName}> ${subclassName}List;

#end


}
